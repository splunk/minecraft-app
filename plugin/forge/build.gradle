task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.net.minecraftforge.gradle:ForgeGradle:2.0.0'
        classpath 'org.mockito:mockito-all:1.8.4'
        classpath 'junit:junit:4.4'
        classpath 'org.jmockit:jmockit:1.13'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

group = "com.splunk"
archivesBaseName = "logtosplunk-forge"
version = "1.1-SNAPSHOT"

minecraft {
    version = "1.8-11.14.3.1504"
    runDir = "eclipse"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_nodoc_20150826"
}


apply plugin: 'java'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}


dependencies {
    compile(group: 'com.splunk.logging', name: 'splunk-library-javalogging', version: '1.5.0')
    compile 'com.splunk:shared-mc:1.0-SNAPSHOT'
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'org.apache.logging.log4j:log4j-api:2.3'
    compile 'org.apache.logging.log4j:log4j-core:2.3'

    testCompile 'junit:junit:4.4'
    testCompile 'org.mockito:mockito-all:1.8.4'
    testCompile 'org.jmockit:jmockit:1.13'
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }